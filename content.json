{"meta":{"title":"时间","subtitle":null,"description":"学习和实践缺一不可,珍惜每一天","author":"凰","url":"http://huangyumeiren.github.io"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"about/index.html","permalink":"http://huangyumeiren.github.io/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"bangumi/index.html","permalink":"http://huangyumeiren.github.io/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"client/index.html","permalink":"http://huangyumeiren.github.io/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2021-11-09T14:13:18.000Z","comments":true,"path":"comment/index.html","permalink":"http://huangyumeiren.github.io/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"categories","date":"2022-11-17T02:32:19.000Z","updated":"2022-11-17T02:33:04.845Z","comments":false,"path":"categories/index.html","permalink":"http://huangyumeiren.github.io/categories/index.html","excerpt":"","text":"","keywords":null},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"donate/index.html","permalink":"http://huangyumeiren.github.io/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"links","date":"2022-10-20T15:14:28.000Z","updated":"2022-10-23T15:56:00.705Z","comments":true,"path":"links/index.html","permalink":"http://huangyumeiren.github.io/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2022-10-20T15:14:28.000Z","updated":"2022-10-23T15:55:50.281Z","comments":false,"path":"music/index.html","permalink":"http://huangyumeiren.github.io/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"lab/index.html","permalink":"http://huangyumeiren.github.io/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2022-11-17T02:26:32.850Z","comments":true,"path":"tags/index.html","permalink":"http://huangyumeiren.github.io/tags/index.html","excerpt":"","text":""},{"title":"tage","date":"2022-11-17T02:25:35.000Z","updated":"2022-11-17T02:25:35.214Z","comments":false,"path":"tage/index.html","permalink":"http://huangyumeiren.github.io/tage/index.html","excerpt":"","text":"","keywords":null},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"video/index.html","permalink":"http://huangyumeiren.github.io/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://huangyumeiren.github.io/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2021-11-09T14:13:18.000Z","comments":true,"path":"rss/index.html","permalink":"http://huangyumeiren.github.io/rss/index.html","excerpt":"","text":""}],"posts":[{"title":"shell基本语法","slug":"shell基本语法","date":"2022-11-11T01:33:10.000Z","updated":"2022-11-30T08:35:05.765Z","comments":true,"path":"2022/11/11/shell基本语法/","link":"","permalink":"http://huangyumeiren.github.io/2022/11/11/shell基本语法/","excerpt":"","text":"脚本的格式要求 脚本已#!/bin/bash开头，需要可执行权限 #This is my First shell //这里的#号属于注解，没有任何的意义，SHELL 不会解析它。 常用执行方式方式1：输入脚本的绝对路径或相对路径 （./xxx.sh）方式2：sh+脚本sh xxx.sh shell关键字常用的关键字如下：echo：打印文字到屏幕exec：执行另一个 Shell 脚本read：读标准输入expr：对整数型变量进行算术运算test：用于测试变量是否相等、 是否为空、文件类型等exit：退出 shell变量介绍:1.Linux shell中的变量分为系统变量和自定义变量2.系统变量：$HOME等3.显示当前shell中所有变量 shell变量的定义基本语法 定义变量：变量=值 等号两边不能留有空格 撤销变量：unset 变量 输出变量：echo $变量 声明静态变量： readonly 变量，注意：不能unset 变量定义实操#!/bin/bash #定义变量A A=100 #输出变量需加上$ echo A=$A echo &quot;A=$A&quot; #撤销变量，变量A便没了 unset A echo A=$A #声明静态的变量B=2 readonly B=2 echo &quot;B=$B&quot; C=`date` D=$(date) echo C=$C echo D=$D 简单的理解变量，相当于定义一个别名-名称，引用的时候加上$符号就可以了。 例如定义变量 name=wuguangke 执行 echo $name 将会显示 wuguangke 定义变量的规则 变量名称可以由字母、数字和下划线组成，但是不能以数字开头。 等号两边不能有空格 变量名称一般习惯大写，这是一个规范，虽然小写也可以运行。将命令的返回值赋给变量A=`date`反引号，运行里面的命令，并把结果返回给变量A,如果没有反引号表示的是将单词date给A A=$(date)等价于上面的语句 位置参数变量$n ( 功能描述: n为数字, $0代表命令本身，$1-$9代表第一到第九个参数, 10以上的参数需要用大括号包含，如${10} $ (功能描述:命令行中所有的参数，$把所有参数看成一个整体) $@ (功能描述:这个变量也代表命令行中所有的参数,不过$@把每个参数区分对待，分别输出) $# (功能描述:命令行中所有参数的个数) SHELL 常见的系统变量解析:$0 当前程序的名称 $n （描述：n为数字，$0代表脚本名称，10以内参数用$1-9 表 示 ， 10 以 上 的 需 要 用 大 括 号 包 含 ， 9表示，10以上的需要用大括号包含，9表示，10以上的需要用大括号包含，{10}） $* （描述：代表命令行中所有的参数，把所有参数看成一个整体） $@ （描述：也代表命令行中所有的参数，不过把每个参数区分对待） $# (功能描述：获取所有输入参数个数，常用于循环) $? 命令或程序执行完后的状态，一般返回 0 表示执行成功。 $UID 当前用户的 ID $PWD 当前所在的目录 $HOME 当前目录的家目录 $$ 程序本身的PID 编写一个shell脚本position.sh，在脚本中获取到命令行的各个参数信息。 vim myshell.sh 输入如下内容 #!/bin/bash echo &quot;0=$0 1=$1 2=$2&quot; echo &quot;所有的参数=$*&quot; echo &quot;$@&quot; echo &quot;参数的个数=$#&quot; sh myshell.sh 10 20 常用判断条件-f 判断文件是否存在 eg: if [ -f filename ]； -d 判断目录是否存在 eg: if [ -d dir ]； -eq 等于，应用于整型比较 equal； -ne 不等于，应用于整型比较 not equal； -lt 小于，应用于整型比较 letter； -gt 大于，应用于整型比较 greater； -le 小于或等于，应用于整型比较； -ge 大于或等于，应用于整型比较； -a 双方都成立（and） 逻辑表达式 –a 逻辑表达式； -o 单方成立（or） 逻辑表达式 –o 逻辑表达式； -z 空字符串； -x 是否具有可执行权限 || 单方成立； &amp;&amp; 双方都成立表达式。 read 读取控制台输入基本语法 read /[选项/]/[参数/] 选项： -p:指定读取值的提示符； -t:指定读取时等待的时间（秒），如果没有在指定的时间内输入就不再等待 参数 变量:指定读取数据的变量名 #!/bin/bash #案例1 :读取控制台输入一个num1值 read -p &quot;请输入指定的num1=&quot; NUM1 echo &quot;输入的num1=$NUM1&quot; #案例2 :读取控制台输入一个num2值，在5秒内输入 read -t 5 -p &quot;请输入num2=&quot; NUM2 echo &quot;输入的num2=$NUM2&quot; vim scripts11.sh #!/bin/bash #提示用户输入分数 read -p &quot;请输入分数&quot; score if [ &quot;$score&quot; -ge 90 -a &quot;$score&quot; -le 100 ] then echo &quot;优秀&quot; elif [ &quot;$score&quot; -ge 80 -a &quot;$score&quot; -lt 90 ] then echo &quot;良好&quot; elif [ &quot;$score&quot; -ge 70 -a &quot;$score&quot; -lt 80 ] then echo &quot;一般&quot; elif [ &quot;$score&quot; -ge 60 -a &quot;$score&quot; -lt 70 ] then echo &quot;及格&quot; else echo &#39;不及格&#39; fi shell流程控制语句if条件判断语句#单分支 if [ 条件判断 ] then 代码 fi #多分支 if [ 条件判断 ] then 代码 elif [ 条件判断 ] then 代码 fi 案例： #!/bin/bash #如果输入的参数，大于等于60，则输出及格了，如果小于60，则输出不及格 if [ $1 -ge 60 ] then echo &quot;及格了&quot; elif [ $1 -lt 60 ] then echo &quot;不及格&quot; fi case语句case $变量名 in &quot;值1&quot;) 如果变量的值等于值1 ,则执行程序1 ;;两分号代表结束 &quot;值2&quot;) 如果变量的值等于值2，则执行程序2 ;; 其他分支 *) 如果变量的值都不是以上的值，则执行此程序 ;; esac 案例 #!/bin/bash #当命令行参数是1时，输出&quot;周一&quot;是2时，就输出&quot;周二”，其它情况输出&quot;other&quot; case $1 in &quot;1&quot;) echo &quot;周一&quot; ;; &quot;2&quot;) echo &quot;周二&quot; ;; *) echo “other” ;; esac for使用语法1： for 变量 in 值1 值2 ... do 代码 done 语法2： for (( 始值;循环控制条件;量变化 )) do 代码 done 案例：打印命令行输入的参数 #!/bin/bash #$*输出方式 for i in &quot;$*&quot; do echo &quot;num is $i&quot; done #$@方式 echo &quot;===========&quot; for j in &quot;$@&quot; do echo &quot;num is $j&quot; done 案例：从1加到100的值输出显示 #!/bin/bash SUM=0 for(( i=1; i&lt;=100; i++ )) do SUM=$[$SUM+$i] done echo &quot;sum=$SUM&quot; while使用while [ 条件判断式 ] do 代码 done 案例：从命令行输入一个数n，统计从1+……n的值是多少? #!/bin/bash SUM=0 i=0 while [ $i -le $1 ] do SUM=$[$SUM+$i] i=$[$i+1] done echo &quot;结果=$SUM&quot; 函数系统函数：basenamebasename [pathname] [suffix](功能：返回完整路径最后/的部分,常用于获取文件名) basename [string] [suffix] (功能：basename命令会删掉所有的前缀包括最后一个/,然后将字符串显示出来) suffix为后缀，如果suffix被指定了, basename会将pathname或string中的suffix去掉。 # 方式1 [linux@localhost datas]$ basename /home/linux/banzhang.txt banzhang.txt # 方式2 [linux@localhost datas]$ basename /home/linux/banzhang.txt .txt banzhang dirname基本语法dirname 文件绝对路径 (功能描述:绝对路径中去除文件名(非目录的部分)，然后返回剩下的路径(目录的部分)) [linux@localhost datas]$ dirname /home/linux/banzhang.txt /home/linux 自定义函数语法： function 函数名 () { 程序 } [function] funname (参数){ Action; [return int;] } []表示可有可无 调用直接写函数名: funname [值] 实际案例： #!/bin/bash #案例：计算输入两个参数的和，getSum function getSum(){ sum=$[$n1+$n2] echo &quot;和是=$sum&quot; } #输入两个值 read -p &quot;第一个值=&quot; n1 read -p &quot;第二个值=&quot; n2 #调用函数 getSum $n1 $n2 数据备份案例需求分析1.每天凌晨2:30备份数据库smile到/data/backup/db2.备份开始和备份结束能够给出相应的提示信息3.备份后的文件要求以备份时间为文件名，并打包成.tar.gz的形式，比如: 2021-07-15 230201.tar.gz4.在备份的同时，检查是否有7天前备份的数据库文件，如果有就将其删除。 vim /usr/sbin/mysql_db_backup.sh 内容如下 #!/bin/bash #备份目录 BACKUP=/data/backup/db #当前时间 DATATIME=$(date +%Y-%m-%d_%H%M%S) #数据库地址 HOST=localhost #数据库用户名 DB_USER=root #数据库密码 DB_PW=root6666 #备份的数据库名 DATABASE=smile #创建备份目录，不存在就创建 [ ! -d &quot;${BACKUP}/${DATATIME}&quot; ] &amp;&amp; mkdir -p &quot;${BACKUP}/${DATATIME}&quot; #备份数据库 echo &quot;开始备份数据库${DATABASE}&quot; mysqldump -u${DB_USER} -p${DB_PW} --host=${HOST} -q -R --databases ${DATABASE} | gzip &gt; ${BACKUP}/${DATATIME}/$DATATIME.sql.gz #将备份文件夹处理成.tar.gz的格式 cd ${BACKUP} tar -zcvf $DATATIME.tar.gz ${DATATIME} #删除对应的备份目录 rm -rf ${BACKUP}/${DATATIME} #删除7天前的备份 find ${BACKUP} -atime +7 -name &quot;*.tar.gz&quot; -exec rm -rf {} \\; echo &quot;备份数据库${DATABASE}成功&quot; 定时脚本 命令行敲crontab -e ，接着输入如下内容 30 2 * * * /usr/sbin/mysql_db_backup.sh 效果图 shell工具cutcut命令从文件的每一行剪切字节，字符和字段并将这些字节，字符和字段输出cut [选项参数] filename -f 列号，提取第几列 -d 分隔符，按照指定分隔符分隔列 # DESC 切割cut.txt第一列 [linux@localhost datas]$ cat cut.txt dong shen guan zhen wo wo lai lai le le [linux@localhost datas]$ cut -d &quot; &quot; -f 1 cut.txt dong guan wo lai le # DESC 获取第三行第一个单词 [linux@localhost datas]$ cat cut.txt | grep guan | cut -d &quot; &quot; -f 1 guan sedsed是一种流编辑器，它一次处理一行内容，处理时，把当前处理的行存储在临时缓冲区中，成为“模式空间”,接着sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕，接着处理下一行，这样不断重复，知道文件末尾，文件内容并没有改变，除非你使用重定向存储输出sed [选项参数] ‘command’ filename -e 直接在指令列模式上进行sed的动作编辑 命令功能描述 a 新增 d 删除 s 查找并替换 # DESC 在第二行后增加mei nv字符 [linux@localhost datas]$ sed -e &quot;2a mei nv&quot; sed.txt dong zhen guan zhen mei nv wo wo lai lai awkawk 一个强大文件分析工具，把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行分析处理 awk [选项参数] &#39;pattern1 {action1} pattern2{action2}..&#39; filename -F 指定输入文件分隔符 -v 赋值一个用户定义变量 sortsort 命令是在Linux里非常有用，它将文件进行排序，并将排序结果标准输出 sourt [选项] (参数) 参数 描述 -n 依照数值大小排序 -t 以相反的顺序排序 -t 设置排序时使用的分隔字符 -k 指定需要排序的列","categories":[{"name":"linux","slug":"linux","permalink":"http://huangyumeiren.github.io/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://huangyumeiren.github.io/tags/linux/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"http://huangyumeiren.github.io/categories/linux/"}]},{"title":"增加/修改/删除","slug":"增加-修改-删除","date":"2022-11-04T04:33:23.000Z","updated":"2022-11-14T02:39:51.305Z","comments":true,"path":"2022/11/04/增加-修改-删除/","link":"","permalink":"http://huangyumeiren.github.io/2022/11/04/增加-修改-删除/","excerpt":"","text":"插入数据插入完整数据insert into 表名 (列1, 列2, …列n) values (值1, 值2, …值n) insert into 表名 values (值1, 值2, …值n) 给指定列插入数据insert into 表名 (列1, 列2, …) values (值1, 值2, ….) 插入多条数据insert into 表名 values (值1, 值2, ….), (值1, 值2, ….) 修改数据update 表名 set 列名称＝该列新值,列名2=该列新值,......列名n=该列新值 update 表名 set 列名称＝该列新值 where 列名称＝某值 update 表名 set 列名1=该列新值，列名2=该列新值,......列名n=该列新值 where 条件 注意：如果没有where条件，修改表中全部数据。 删除数据delete from 表名称 where 列名称＝值 delete from 表名称 在删除表中数据的时候，主键的自增不会停止 truncate table 表名 清空表数据并且重置主键,因此清空表应该用truncate","categories":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/categories/mysql/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"http://huangyumeiren.github.io/tags/悦读/"},{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/tags/mysql/"}],"keywords":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/categories/mysql/"}]},{"title":"linux常用命令","slug":"linux常用命令","date":"2022-11-03T02:30:27.000Z","updated":"2022-11-30T06:25:58.775Z","comments":true,"path":"2022/11/03/linux常用命令/","link":"","permalink":"http://huangyumeiren.github.io/2022/11/03/linux常用命令/","excerpt":"","text":"常用命令虚拟机目录目录含义/bin ：存放着最经常使用的命令 /home ：存放普通用户的主目录，一般该目录名是以用户的账号命名 /root ：该目录为系统管理员，也称作超级权限者的用户主目录（根目录） /boot：Linux启动相关文件 /lib：系统开机所需要最基本的动态连接共享库，其作用类似于Windows里的DLL文件。 /lost+ found这个目录一般情况下是空的,当系统非法关机后,这里就存放了一些文件 /etc：系统管理所需配置和子文件目录 /user：用户应用程序和文件 /proc[不能动]：是虚拟目录，系统内存映射，访问这个目录获取系统信息 /srv[不能动]：存放服务启动后所需数据 /sys[不能动]：该目录安装了2.6内核新出现的文件系统 /tmp：存放临时文件 /mnt：存放挂载文件 /opt：给主机额外安装软件的目录，即软件存放目录 /user/local：软件安装后的目标目录，一般是编译源码的方式安装的程序 Linux颜色含义蓝色表示目录，白色表示文件，红色表示压缩文件，绿色表示可执行权限 编辑命令vi、vim都是编辑命令，vim是vi的增强版，它们有三种模式，一般模式，编辑模式(能输入内容)，命令模式。 一般模式：输入的内容看不见 编辑模式：可以自由输入内容，可见 命令模式：在文件末尾位置，可见 命令模式》一般模式：vim或vi 一般模式》编辑模式：i、o、a、r等按键 编辑模式》一般模式：esc 一般模式》命令模式：:，/ :wq：保存退出 :q：不保存退出 :q!：强制退出 自动补全文件名：tab 拷贝当前行（一般模式）：yy，并粘贴输入p 拷贝当前行向下的i行：iyy。 删除当前行：dd 删除当前行向下的i行idd 在文件中查找某个单词（命令模式）敲/,回车查找，输入n就是查找下一个 设置文件的行号（：进入命令模式）：命令行下set nu 取消文件的行号：set nonu 使用快捷键到该文档的最末行[G]和最首行[gg]（一般模式下） 在一个文件中输入”hello”然后又撤销这个动作，一般模式下按u 立即关机：shutdown -h now 一分钟后关机：shutdown -h 1 重启计算机：reboot 获取帮助信息：man 【命令或配置文件】（按空格显示更多帮助信息） 获取内置命令帮助信息：help 命令 文件与目录显示目录下的内容ls -l 显示目录下文件的详细信息 ls -a 显示目录下的所有文件（包括隐藏文件） ls -lh 显示目录下文件的详细信息（自动匹配单位，K,M,G） ls -ld 显示指定目录的详细信息（不是目录下的文件，是该目录本身的信息 创建目录mkdir 文件夹名称 创建单个文件夹 mkdir -p 文件夹1/文件夹2/文件夹3 创建多个文件夹 删除空目录rmdir 目录名 只能删除空目录 切换目录cd . 当前路径 cd .. 返回上一级目录 cd ../.. 返回上级目录的上级目录 cd - 回到切换之前的目录 cd ~ 回到当前用户所在的家目录 cd /usr/test01 切换到test01这个目录里面 查看当前目录的的绝对路径pwd 复制文件或目录复制普通文件cp 原文件 目标路径 复制目录cp -r 原文件 目标路径 剪切/重命名剪切mv a.txt/home/test 重命名mv a.txt aa.txt 创建空白文件touch 文件名 rm删除文件删除文件rm 文件名 询问是否删除 rm -f文件名 不询问,强制删除 删除目录rm -r目录名 询问是否删除 rm -rf目录名 不询问,强制删除 重定向>代表将输出的内容重定向到文件，使用&gt;重定向后，文件中原本的内容会被覆盖 命令&gt;文件 >>代表输出的内容以追加的方式重定向到文件，使用&gt;&gt;重定向后，文件中原来的内容不会被覆盖，而是在原有的内容后面追加新的内容 命令>>文件 查看文件cat显示文件内容 -n显示行号 more分页显示文件内容 按空白键（space）就向下滚动一屏，按b键就会向上滚动一屏，按回车键往下显示一行 按q退出 less分页显示文件内容 pgup 向上翻页pgdn 向下翻页 按回车键往下显示一行 按q退出 head显示文件前面几行，不给参数，默认显示前10行 head -n 20 /etc/services tail显示文件后面几行，默认显示最后10行 -n 指定行数 -f 实时刷新文件末尾内容(查看实时日志，监控文件增长) vi/vim文本编辑 权限管理chmod改变文件的权限-R 递归修改，将目录下的所有文件全都修改(包括子目录) 符号法u所有者 g同组用户 o其它人 a所有人 +增加权限 -减少权限 =不管之前是什么权限都改成赋于之后的权限 r（可读）w（可写）x（可执行） chmod u+w a.txt chmod g+w,o-r a.txt chmod g=rwx a.txt chmod ug+rw a.txt 数字法r—-4w—2x—-1 chmod 777 a.txt chmod 755 a.txt chmod 744 a.txt chown改变文件或者目录的拥有者和属组改变文件所有者chown 用户名 文件 chown liaocx a.txt 改变文件属组chown :组名 文件 chown :group1 a.txt 同时改变文件所有者和属组chown 用户名:组名 文件 chown liaocx:group1 a.txt chgrp改变文件所属组chgrp 用户组 文件或目录 查看文件所有者ls -ahl 打包与压缩tartar打包同时用gzip压缩tar -zcvf 压缩包名.tar.gz 文件目录 tar -zcvf abc.tar.gz abc 用gzip解压后同时解包tar -zxvf 压缩包名.tar.gz tar -zxvf apache-tomcat-8.5.32.tar.gz 这里的-C是指定解压到哪个目录tar -zxvf apache-tomcat-8.5.32.tar.gz -C /opt zip压缩gzip 文件名 gzip a.txt 把a.txt压缩为a.txt.gz，同时a.txt文件不存在了 解压gzip -d 文件名 gzip -d a.txt.gz 把a.txt.gz解压，解压完成之后生成a.txt，a.txt.gz就不存在了","categories":[{"name":"linux","slug":"linux","permalink":"http://huangyumeiren.github.io/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://huangyumeiren.github.io/tags/linux/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"http://huangyumeiren.github.io/categories/linux/"}]},{"title":"数据库","slug":"数据库","date":"2022-11-02T06:27:24.000Z","updated":"2022-11-02T13:59:09.764Z","comments":true,"path":"2022/11/02/数据库/","link":"","permalink":"http://huangyumeiren.github.io/2022/11/02/数据库/","excerpt":"","text":"启动/停止数据库net start mysql57(启动) net stop mysql57(停止) 连接数据库mysql -h主机地址 -u用户名 -p用户密码 -p端口号 如果连接本机localhost，且端口号是默认的3306，则可以输入：mysql -u用户名 -p 查看数据库状态\\s 退出quit exit mysql导入/导出导入数据库#先创建与文件中相同名的数据库——定位数据库——source sql文件路径（连接数据库） source D:\\sql\\student.sql 导出数据库 mysqldump -u 用户名 -p 数据库名 &gt; 存放位置及sql文件名（不用连接数据库） 导出数据库中的表 mysqldump -u 用户名 -p 数据库名 表名 &gt; 存放位置及sql文件名（不用连接数据库）","categories":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/tags/mysql/"}],"keywords":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/categories/mysql/"}]},{"title":"mysql增删改查(单表查询)","slug":"mysql学习","date":"2022-10-27T16:03:19.000Z","updated":"2022-11-02T13:58:00.906Z","comments":true,"path":"2022/10/28/mysql学习/","link":"","permalink":"http://huangyumeiren.github.io/2022/10/28/mysql学习/","excerpt":"","text":"数据库 数据库登录mysql -uroot -p123456 查看数据库show databases 显示当前数据库select database 创建数据库 create database 数据库名 进入数据库use 数据库名称 查看表格show 数据库名称 数据表表格数据查询查询全部数据select * from 表名 查询指定列的数据(支持多列查询)select 列名1,列名2... from 表名 去重（distinct）select distinct 列名 from 表名 as别名 给列起别名select 列名1 as 别名1,列名2 as别名2 from 表名 给表起别名select 列名1,列名2... from 表名 as 别名 where条件查询 查询指定where条件的数据select * from 表名 where 条件 in&amp;not in in指定查询范围（汉字加’’）select * from 表名 where 列名 in (列值1,列值2....) not in否定后面跟的条件 not（否）select * from 表名 where 列名 not in (列值1,列值2....) between…and(查询初值到终值之间的数值)select * from 表名 where 列名 between 初值 and 终值 select 列名 from 表名 where 列名 between 初值 and 终值 select * from 表名 where 列名 not between 初值 and 终值 like模糊查询通配符（%代替0个或者多个字符，_代替任意&gt;&gt;一个字符）select * from 表名 where 列名 like &#39;条件&#39; 比较运算符 = 等于 > 大于 &lt; 小于 >= 大于等于 &lt;= 小于等于 &lt;&gt;或者!= 不等于逻辑运算数符 and 需要多个条件同时满足才能有结果select * from 表名 where a and b or 满足其中一个条件就行select * from 表名 where a or b not（否）非空判断 列值为空的情况(is null)select 列名1,列名2.... from 表名 where 列名 is null 列值不位空的情况(is not null)select 列名1,列名2.... from 表名 where 列名 is not null limit限制查询 初始位置，默认值为 0，表示第一行（只要默认值为0，就是从第一行开始）select * from 表名 limit 初始位置，行数 返回条数select * from 表名 limit 返回条数 order by排序默认升序，asc升序，desc为降序，如果排序中有2列进行排序，先排写在前面的,如果有相同的列值再进行后面的排序select * from 表名 order by 列名1 asc/desc,列名2 asc/desc 聚合函数 avg 平均值select avg(列名) from 表名 count(*) 统计该表中数据总条数 count(列名)统计该列值数据的总条数 max 最高值 min 最低值 sun 和 聚合函数针对的是分组的内容，如果没有group by分组，则默认整体算作一组group by分组查询 在某张表中，根据某一列，把数据分成几组（相同的分成一组），然后对每一组数据使用聚合函数，聚合函数经常和分组查询一起使用 出现在select中的字段，要么是分组字段，要么是聚合函数 select 列名, 函数名(列名) from 表名 where 条件 group by 列名 order by 列名1/聚合函数 asc/desc，列名2/聚合函数 asc/desc 分组依据’每‘或者’各个‘字后面的字段，就是我们分组的依据多条记录之间的某个字段值相同，该字段通常作为分组的依据 可以按照任意字段分组，但分组完之后，比如group by sdept，只能查看sdept字段，如果想查看组内信息，需要借助于聚合函数having过滤 where 是对整张表中的数据进行过滤，可以单独使用，having 是对分组后的数据进行过滤，having不可以单独使用，必须和group by一起使用，放在group by的后面 having发生在group by分组之后，因此having中可以使用分组的字段和聚合函数，无法直接取到其他字段 select 列名, 函数名(列名) from 表名 where 条件 group by 列名 having 条件 order by 列名1/函数名 asc/desc，列名2/函数名 asc/desc limit 总结 书写顺序select—distinct—from— where— group by— having—order by-limit 执行顺序from— where— group by — having —select—distinct—order by-limit where发生在分组group by之前，where中可以有任意字段，但绝对不能使用聚合函数 group by为界，前面的不可以出现聚合函数，后面的都可以出现聚合函数，即只有分组后才可以使用聚合函数","categories":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/tags/mysql/"}],"keywords":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/categories/mysql/"}]},{"title":"mysql增删改查(多表查询)","slug":"mysql学习笔记-二","date":"2022-10-27T16:03:19.000Z","updated":"2022-11-02T13:58:36.486Z","comments":true,"path":"2022/10/28/mysql学习笔记-二/","link":"","permalink":"http://huangyumeiren.github.io/2022/10/28/mysql学习笔记-二/","excerpt":"","text":"表连接需要的数据，分布在不同的表中，为了一次获取不同表中的数据，就需要进行表连接，将多表的数据根据彼此共同的类数据连接在一起，一个表的行更另一个表的行连接起来形成新的行，展示完整的信息 joininner join 内连接只取两张表共有的部分 select 列名 from 表1 inner join 表2 on 表1.列名=表2.列名 inner join 和join 是相同的 select * from 表1,表2 where 表1.列名=表2.列名 letf join 左连接select 列名 from 表1 letf join 表2 on 表1.列名=表2.列名 right join 右连接select 列名 from 表1 right join 表2 on 表1.列名=表2.列名 子查询子查询是在查询语句的内部又包含一个查询语句，内层查询语句的查询结果当作另外一个查询语句的条件去用，当做条件的时候用括号括起来。 子查询也是我们平时解决问题的思路，分步处理。 表的查询结果可以作为其他表的查询条件，也可以通过起别名的方式把它作为一张虚拟表和其他表关联 总结书写sql语句的时候，select后面先用*占位，写完再改 涉及到多表操作的时候一定要加上表的前缀 在做多表查询的时候，联表操作和子查询可能会结合使用，可以连接N张表，将两张表的结果起别名，变成了一张表，之后再去另外一张拼接再起别名，再去拼接 写较为复杂的sql语句的时候，不要想着一口气写完，一步一步来，写一点查一点看一下再写，最终能够凑出来就可以了","categories":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/tags/mysql/"}],"keywords":[{"name":"mysql","slug":"mysql","permalink":"http://huangyumeiren.github.io/categories/mysql/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-10-21T11:54:45.458Z","updated":"2022-10-20T09:02:11.837Z","comments":true,"path":"2022/10/21/hello-world/","link":"","permalink":"http://huangyumeiren.github.io/2022/10/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2021-11-09T14:13:18.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura/","link":"","permalink":"http://huangyumeiren.github.io/2018/12/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"http://huangyumeiren.github.io/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"http://huangyumeiren.github.io/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"http://huangyumeiren.github.io/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://huangyumeiren.github.io/categories/技术/"}]}]}